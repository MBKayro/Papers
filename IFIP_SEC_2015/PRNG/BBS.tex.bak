In 2012 [BBS-1] Khushboo Sewak et all, The main purpose of this paper is to study the FPGA implementation of two 16 bit PN sequence generator namely Linear Feedback Shift Register (LFSR) and Blum-Blum-Shub (BBS). The use of feedback shift register permits very fast generatio PN sequence whereas BBS method requires a number of time consuming arithmetic operation as it is based on quadratic Congruential equation.

In 2010 [BBS-2] Pedro Peris-Lopez and Enrique San Millan, Our analysis looks at the feasibility of RFID tags for supporting Cryptographically Secure Pseudorandom Number Generators (CS-PRNG) on their limited chip. Specifically, we study the implementation of the Blum-Blum-Shub (BBS) pseudorandom number generator for security levels 232 (160 bits) and 264 (512 bits) respectively, This paper makes a detailed analysis of the feasibility of implementing the BBS generator for 160 bits and 512 bits length. 
The implementation of the BBS algorithm is based on modular squaring, which can be computed by modular multiplication. Specifically, we study the hardware implementations. Different algorithms have been proposed to obtain the modular multiplication of two numbers (A x B mod M) [14].
for the following algorithms: 1) Classical combinational multiplier, with Barrett's reduction; 2) Classical shift and add multiplication, with Barrett's reduction; 3) Karatsuba's multiplication, with Barrett's reduction; 4) Montgomery's direct modular multiplication, iterative architecture.
In particular, we analyze different architecture implementations of the BBS generator, considering the different modular multiplications discussed in the previous section.
As the delay is not a differentiated factor, the choice of algorithm will generally depend on the area they occupy. In this respect, we can see that the Montgomery iterative approach produces the best results.
