\label{Mastrine Tewister}
In 2013 [MT-1] Shengfei Wu et al, In this paper, a hardware architecture for the generation of parallel long-period random numbers using MT19937 method was proposed. Most hardware implementations of MT19937 are straightforward non-parallelized implementations of the original C-code. The Mersenne Twister Method, which is a pseudorandom number algorithm based on a matrix linear recurrence over F2, is developed by Makoto Matsumoto in 1997. In order to get the long period and good equidistribution, the Mersenne Twister is cascaded with a tempering transform to compensate for the reduced dimensionality of equidistribution, the temper is defined in the case of Mersenne Twister. We use dual-port BRAMs in FPGA for the implementation and 3 degrees parallelization will be introduced as an example.

In 2013 [MT-2] Pedro Echeverría et al, In this work we present two complete MT URNGs based on the same set of parameters, MT19937, but now designed to fulfill the above mentioned features:
1. All in hardware.
2. Capable of generating one sample per cycle.
3. Highly efficient in area and performance.
The other key element in the hardware architecture is the storage element needed for the n × w work area of the linear recurrence. There are two suitable options: a storage table, Fig. 2a, which is the solution adopted in previous works, and a circular buffer, the solution proposed in this work.In an FPGA, this three port table has a direct translation into two dual port tables implemented by embedded Block-RAMs.
A second option is the use of a circular buffer (CB) of registers taking advantage of the fixed relationship between the indexes of the words and considering that each step of the recurrence xk is replaced by xk+n in the work area. This way, the linear recurrence (L. R. in
Fig. 2b) and the buffer of registers can be considered as a circular buffer where the linear recurrence is carried out by some combinational logic between the input and the output of the buffer. Hence the architecture is simplified as no logic for the table indexes is needed.

in 2013 [MT-3] Yuan Li et al, We propose a hardware architecture for the MT19937 algorithm which achieves a throughput of 1 sample per cycle.
We design a dedicated 3R/1W RAM structure for MT19937, which is the key component for the entire system to achieve the expected throughput, with little resource overhead.
The overview of our proposed hardware architecture for MT19937 algorithm is illustrated in Fig. 2. It is composed of five components, i.e. the Address Unit, the Transform Unit, the Temper Unit, the Control Unit and a 3R/1W RAM.
The Transform Unit and the Temper Unit correspond to the Transform and Temper processes described in (1) and (4), respectively. These two components can be fully pipelined to maximize the clock speed. The Address Unit produces the proper addresses for the ports of the 3R/1W RAM. It implements the address generation algorithm described in Fig.3. The 3R/1W RAM is the key component of the system. It is capable of providing 3 Reads and 1 Write concurrently in a single cycle. We will present its structure in details in the next sub-section. The Control Unit is responsible for generating control signals to coordinate the entire system.

In 2009 [MT-4] Xiang Tian and Khaled Benkrid, This paper presents the design and implementation of a parallel Mersenne Twister PRNG on FPGAs. It also compares the FPGA implementation to equivalent software implementations running on a multi-core CPU, together with a GPU. Generating the tempering matrix for each computing core based on the given word length, size of working area, and process ID;
• Initializing the generator based on the given seed number;
• Generating the untempered numbers;
• Tempering.
In our hardware implementation, step 1 and 2 are performed in software while step 3 and 4 are performed in hardware.
two block RAMs are needed: one is for xl, and the other is for x.
However, FPGAs are much more energy efficient. Indeed, using the same amount of energy, FPGAs can generate 37x and 35x more Mersenne Twister random samples than the CPU and the GPU, respectively.

in 2008 [MT-5] Shrutisagar Chandrasekaran and Abbes Amira, The three key functional blocks in the MT19937 architecture are the Initialise Generator (IG), Generate Numbers (GN) and Extract Number (EN). All three blocks are executed in parallel. To enable parallelisation without increasing hardware overhead, multiported block RAMs are used rather than arrays built from distributed logic. the design has beenperformed using Handel C and prototyped on the Celoxica RC1000 board. \\


